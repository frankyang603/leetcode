/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        return find(root->left,root->right);  
    }
    
    bool find(TreeNode*p,TreeNode*q){
        if(!p&&!q){
            return 1;
        }
        if(!p||!q){
            return 0;
        }
        return find(p->right,q->left)&&find(p->left,q->right)&&(p->val==q->val);
    } 
};