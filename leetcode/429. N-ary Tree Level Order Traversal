/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    vector<vector<int>>out;
public:
    vector<vector<int>> levelOrder(Node* root) {
        if(root){
            find(root,0);
        }
        return out;
    }
    void find(Node* root,int level){
        if(!root){
            return;
        }
        if(out.size()<=level){
            vector<int>newv;
            newv.push_back(root->val);
            out.push_back(newv);
        }
        else{
            out[level].push_back(root->val);
        }
        int index=0;
        while(root->children.size()>index){
            find(root->children[index],level+1);
            index++;
        }
    }
};