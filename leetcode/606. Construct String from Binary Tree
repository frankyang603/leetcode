/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    string tree2str(TreeNode* root) {
        string str="";
        str=find(root);
        str.erase(str.begin(),str.begin()+1);
        str.erase(str.end()-1,str.end());
        return str;
    }
    
    string find(TreeNode* root){
        if(!root->left&&!root->right){
            return "("+to_string(root->val)+")";
        }
        string a="",b="";
        if(root->left&&root->right){
            a=find(root->left);
            b=find(root->right);
        }
        else if(root->left){
            b=find(root->left);
        }
        else if(root->right){
            a="()";
            b=find(root->right);
        }
        return  "("+to_string(root->val)+a+b+")";
    }  
};