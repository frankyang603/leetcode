/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int maxnum=-10000;
public:
    int maxPathSum(TreeNode* root) {
        if(!root->left&&!root->right){
            return root->val;
        }
        find(root);
        return maxnum;
    }
    
    int find(TreeNode* root){
        if(!root->left&&!root->right){
            return root->val;
        }
        int a=-10000,b=-10000;
        if(root->left){
            a=find(root->left);
        }
        if(root->right){
            b=find(root->right);
        }
        int r=root->val;
        
        if(a+b+r>maxnum){
            maxnum=a+b+r;
        }
        if(a+r>maxnum){
            maxnum=a+r;
        }
        if(b+r>maxnum){
            maxnum=b+r;
        }
        if(a>maxnum){
            maxnum=a;
        }
        if(b>maxnum){
            maxnum=b;
        }
        if(r>maxnum){
            maxnum=r;
        }
        if(a>=b&&a>0){
            return a+root->val;
        }
        if(a<b&&b>0){
            return b+root->val;
        }
        return root->val;
    }
};