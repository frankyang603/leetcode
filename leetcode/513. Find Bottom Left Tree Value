/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
int temp=0;
int left=0;
public:
    int findBottomLeftValue(TreeNode* root) {
        if(!root->left&&!root->right){
            return root->val;
        }
        find(root,1);
        return left;
    }
    
    void find(TreeNode* root,int n){
        if(!root->left&&!root->right){
            if(n>temp){
                temp=n;
                left=root->val;
            }
            return;
        }
        if(root->left){
            if(n>temp){
                temp=n;
                left=root->val;
            }
            find(root->left,n+1);
        }
        if(root->right){
            find(root->right,n+1);
        }
    }
    
};