/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        int length=0;
        ListNode *temp=head;
        vector<int> k;
        for(;temp;temp=temp->next){
            length++;
            k.push_back(temp->val);
        }
        for(int i=0;i<length/2;i++){
            if(k[i]!=k[length-1-i]){
                return 0;
            }
        }
        return 1;
        // ListNode *headrun=head;
        // ListNode *midrun=head;
        // for(int j=0;j<length/2;j++){
        //     midrun=midrun->next;
        // }
        // if(length%2==1){
        //     midrun=midrun->next;
        // }
        // for(int i=0;i<length/2;i++){
        //     ListNode *temp=midrun;
        //     for(int j=0;j<length/2-i-1;j++){
        //         temp=temp->next;
        //     }
        //     if(temp->val!=headrun->val){
        //         return 0;
        //     }
        //     headrun=headrun->next;
        //     // midrun=midrun->next;
        // }
        return 1;
    }
};