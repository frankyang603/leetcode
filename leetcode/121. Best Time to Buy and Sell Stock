class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int max=0;
        int min=prices[0];
        for(int i=1;i<prices.size();i++){
            if(prices[i]<min){
                min=prices[i];
            }
            if(prices[i]-min>max){
                max=prices[i]-min;
            }
        }
        return max;
        
//         int maxp=0;
//         int max=0;
//         int maxn;
//         int min=0;
//         int i=0;
//         while(i<=prices.size()-1){
//             int maxx = *max_element(prices.begin()+i, prices.end());
//             if(maxx<=maxp){
//                 break;
//             }
//             max=max_element(prices.begin()+i,prices.end()) -prices.begin();
//             min=min_element(prices.begin()+i,prices.begin()+max)-prices.begin();
//             if(prices[max]-prices[min]>maxp){
//                 maxp=prices[max]-prices[min];
//             }     
//             i=max+1;
           
//         }
 
//         return maxp;
    }
};