/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int out=0;
    // int a[10];
   
public:
    int pseudoPalindromicPaths (TreeNode* root) {
        // 
        int m=0;
        if(root){
            find(root,m);
        }
        return out;
    }
    void find(TreeNode* root,int m){ //,vector<int> g){
        // g[root->val]=(g[root->val]+1)%2;
        m^=(1<<root->val);
        if(!root->left&&!root->right){
            // deter(g);
            if((m&(m-1))==0){
                out++;
            }
            return;
        }
        if(root->left){
            find(root->left,m);
        }
        if(root->right){
            find(root->right,m);
        }
    }
    // void deter(vector<int> h){
    //     int t=count(h.begin(),h.end(),1);
    //     // for(int i=0;i<10;i++){
    //     //     cou
    //     // }
    //     if(t<=1){
    //        out++; 
    //     } 
    //     // int t=0;
    //     // for(int i=0;i<10;i++){
    //     //     if(h[i]%2==1){
    //     //         t++;
    //     //     }
    //     // }
    //     // if(t<=1){
    //     //    out++; 
    //     // } 
    // }
};